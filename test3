#####################################################################
    ### CLEAN RELEASE DIRECTORY AND DEPLOY FRESH FILES               ###
    #####################################################################
    
    - name: deployARSParser | Clean release directory completely
      file:
        path: "{{ release_path }}"
        state: absent

    - name: deployARSParser | Recreate clean release directory
      file:
        path: "{{ release_path }}"
        state: directory
        owner: "{{ ars_default_user_name }}"
        group: "{{ ars_default_user_group }}"
        mode: '0755'

    - name: deployARSParser | Debug - Show what we're about to deploy
      debug:
        msg: 
          - "Deploying: {{ deployment_filename }}"
          - "Source: {{ archive_name.dest }}"
          - "Destination: {{ ars_parser_run_dir }}"

    - name: deployARSParser | Copy and rename jar file to standard name
      copy:
        src: "{{ archive_name.dest }}"
        dest: "{{ ars_parser_run_dir }}/275generation.jar"
        remote_src: true
        owner: "{{ ars_default_user_name }}"
        group: "{{ ars_default_user_group }}"
        mode: '0644'
      delegate_to: "{{ inventory_hostname }}"

    - name: deployARSParser | Verify new jar was deployed
      stat:
        path: "{{ release_path }}/275generation.jar"
      register: deployed_jar

    - name: deployARSParser | Fail if jar was not deployed
      fail:
        msg: "275generation.jar not found in {{ release_path }} after deployment"
      when: not deployed_jar.stat.exists

    - name: deployARSParser | Create configuration and script files (without backup)
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0644') }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        force: true
        backup: false
      with_items:
        - src: "../templates/ars/run-ars-parser.sh.j2"
          dest: "{{ ars_parser_run_dir }}/run-ars-ingest.sh"
          owner: "{{ ars_default_user_name }}"
          group: "{{ ars_default_user_group }}"
          mode: '0755'
        - src: "../templates/ars/run-ars-parser.sh.j2"
          dest: "{{ ars_parser_run_dir }}/run-ars-unmatch.sh"
          owner: "{{ ars_default_user_name }}"
          group: "{{ ars_default_user_group }}"
          mode: '0755'
        - src: "../templates/ars/run-ars-parser.sh.j2"
          dest: "{{ ars_parser_run_dir }}/run-ars-pedmatch.sh"
          owner: "{{ ars_default_user_name }}"
          group: "{{ ars_default_user_group }}"
          mode: '0755'
        - src: "../templates/ars/{{ app_name }}.application.properties.j2"
          dest: "{{ ars_parser_run_dir }}/parser.properties"
          owner: "{{ ars_default_user_name }}"
          group: "{{ ars_default_user_group }}"
          mode: '0644'
        - src: "../templates/ars/{{ app_name }}.log4j2.xml.j2"
          dest: "{{ ars_parser_run_dir }}/log4j2.xml"
          owner: "{{ ars_default_user_name }}"
          group: "{{ ars_default_user_group }}"
          mode: '0644'
        - src: "../templates/ars/checkmounts.sh.j2"
          dest: "/usr/local/bin/checkmounts.sh"
          owner: "root"
          group: "{{ s3_mount_group }}"
          mode: '2755'
        - src: "../templates/ars/{{ app_name }}-cwagent-logs.json.j2"
          dest: "{{ aws_cwagent_install_path }}/etc/{{ app_name }}-cwagent-logs.json"
          owner: "root"
          group: "root"
          mode: '0755'
      loop_control:
        label: "deploy {{ item.src }}"


