- name: Promote artifacts from develop to {{ target_branch }}
  hosts: localhost
  gather_facts: false
  vars:
    files_to_release:
      - { src: "fpps-web", filename: "fpps-web-568768.tar.gz", artifact_folder: "frontend" }
      - { src: "fpps-api", filename: "fpps-api-568768.tar.gz", artifact_folder: "api" }
    processing_failures: []

  tasks:

    - name: Ensure repo is clean and on target branch
      ansible.builtin.shell: |
        git fetch --all
        git reset --hard origin/{{ target_branch }}
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}"

    - name: Promote each artifact
      ansible.builtin.include_tasks: promote_single_artifact.yml
      loop: "{{ files_to_release }}"
      loop_control:
        loop_var: artifact

    - name: Fail if any promotion failed
      ansible.builtin.fail:
        msg: "Failed to promote: {{ processing_failures | join(', ') }}"
      when: processing_failures | length > 0

    - name: Tag the release
      ansible.builtin.shell: |
        cd "{{ destination_directory }}/{{ github_repo_name }}"
        git fetch --tags
        if [ -z "$(git tag -l {{ release_tag }})" ]; then
          git tag -a {{ release_tag }} -m "Tagging artifacts with version {{ release_tag }}"
          git push origin {{ release_tag }} || git push origin {{ release_tag }} --force
        else
          echo "Tag {{ release_tag }} already exists"
        fi
      register: tag_result
      failed_when: tag_result.rc != 0 and 'already exists' not in tag_result.stderr

    - name: Confirm tag exists in remote
      ansible.builtin.shell: |
        git ls-remote --tags origin | grep -c "{{ release_tag }}" || echo "0"
      args:
        chdir: "{{ destination_directory }}/{{ github_repo_name }}"
      register: tag_verify
      failed_when: tag_verify.stdout.strip() == "0"
